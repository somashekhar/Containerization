Docker creates network object. Network driver/plugin helps.

docker system info 
    Plugin -> Network

docker network ls
docker network inspect bridge
docker container create --name n1 -it alpine

Connecting to container using bridge networking:
    1. Container to container
        Use the IPs of container
    2. Container to outside : NAT 
        resolve conf is dynamically generated by docker from host and is bind mounted to container. To connect to outside world.
          cat /etc/resolv.conf
    3. Outside to container : Port forwarding
        Port forwarding through NAT router is used to connect container from outside.
          docker container create --name n4 --publish <host port>:<docker port> <image>
          docker container create --name n4 --publish 9000:80 nginx:alpine

For DNS purpose:
    1. Linking of container:
          Works on only using bridge.
    2. Dont use default bridge network. Create a private network using default bridge.

    docker network create --driver bridge --subnet 192.168.125.0/24 pnet
    docker container create --name pn1 -it --network pnet alpine
    docker container create --name pn2 -it --network pnet alpine

    Now we can reach through name.
    wget -qO- http://pn2
    wget -q- http://pn1

    Note:
      Container can sit on multiple networks.
      docker container create --name n1 -it alpine      [default]
      docker network connect pnet n1                    [pnet]


    docker network ls
        none    for batch processes, process from one volume and put into another. Does not connect to external network.
        host    connects to host network. Can reach or recieve on that ports. Breaks isolation at network layer.
        bridge  



